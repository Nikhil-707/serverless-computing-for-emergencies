# -*- coding: utf-8 -*-
"""comparison between serverless and traditional.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LXxISmnE_fNTdnrglU3h5Tz2f_vB9XpJ
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import ttest_ind

# Create the dataset
data = {
    'Function': ['Func 1', 'Func 2', 'Func 3', 'Func 4', 'Func 5'],
    'Invocation #': [100, 200, 150, 120, 180],
    'Memory Used (MB)': [256, 128, 512, 256, 128],
    'Duration (ms)': [250, 150, 300, 200, 175],
    'CPU Utilization (%)': [50, 75, 60, 45, 70],
    'Network Latency (ms)': [5, 8, 10, 7, 9],
    'Model': ['Serverless PMUs', 'Traditional', 'Traditional', 'Traditional', 'Serverless PMUs']
}
df = pd.DataFrame(data)

# Create the box plots
sns.set_style("whitegrid")
fig, axs = plt.subplots(2, 2, figsize=(10, 8))
sns.boxplot(x='Model', y='Memory Used (MB)', data=df, ax=axs[0, 0])
sns.boxplot(x='Model', y='Duration (ms)', data=df, ax=axs[0, 1])
sns.boxplot(x='Model', y='CPU Utilization (%)', data=df, ax=axs[1, 0])
sns.boxplot(x='Model', y='Network Latency (ms)', data=df, ax=axs[1, 1])
plt.tight_layout()
plt.show()

# Perform the t-tests
pmu_memory = df[df['Model'] == 'Serverless PMUs']['Memory Used (MB)']
trad_memory = df[df['Model'] == 'Traditional']['Memory Used (MB)']
print('Memory Usage t-test p-value:', ttest_ind(pmu_memory, trad_memory)[1])

pmu_duration = df[df['Model'] == 'Serverless PMUs']['Duration (ms)']
trad_duration = df[df['Model'] == 'Traditional']['Duration (ms)']
print('Duration t-test p-value:', ttest_ind(pmu_duration, trad_duration)[1])

pmu_cpu = df[df['Model'] == 'Serverless PMUs']['CPU Utilization (%)']
trad_cpu = df[df['Model'] == 'Traditional']['CPU Utilization (%)']
print('CPU Utilization t-test p-value:', ttest_ind(pmu_cpu, trad_cpu)[1])

pmu_latency = df[df['Model'] == 'Serverless PMUs']['Network Latency (ms)']
trad_latency = df[df['Model'] == 'Traditional']['Network Latency (ms)']
print('Network Latency t-test p-value:', ttest_ind(pmu_latency, trad_latency)[1])